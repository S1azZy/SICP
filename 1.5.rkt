#lang racket
(define (p) (p))

(define (test x y)
  (if (= x 0)
      0
      y))

;(test 0 (p))

; Аппликативный порядок - значение операндов вычисляется до вызова функции.
; при вызове (test 0 (p)) интерпретатор попытается вычислить (p) и попадет в бесконечную рекурскию
; При нормальном порядке, операнды не вычисляются до тех пор, пока они не нужны. 
; Как следствие ответ будет 0, потому что (p) вычисляться не будет.
